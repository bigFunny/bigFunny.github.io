<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>字符串</title>
      <link href="/post/fc81fbfd.html"/>
      <url>/post/fc81fbfd.html</url>
      
        <content type="html"><![CDATA[<h1 id="字符串介绍"><a href="#字符串介绍" class="headerlink" title="字符串介绍"></a>字符串介绍</h1><p>Java字符串就是Unicode字符序列。</p><ul><li>直接创建</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello world!&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>构造函数创建</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h1><p>用substring(a,b)方法，可将字符串拆成b-a长度的一个子串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        <span class="comment">//取前三个字符</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> str.substring(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hel</span><br></pre></td></tr></table></figure><h1 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h1><ul><li>‘+’ 号拼接</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> str + <span class="string">&quot; world!&quot;</span>;</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world!</span><br></pre></td></tr></table></figure><ul><li>静态方法join方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//  &quot;/&quot;为分界</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> String.join(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="string">&quot;M&quot;</span>,<span class="string">&quot;L&quot;</span>,<span class="string">&quot;XL&quot;</span>);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S/M/L/XL</span><br></pre></td></tr></table></figure><h1 id="检查字符串是否相等"><a href="#检查字符串是否相等" class="headerlink" title="检查字符串是否相等"></a>检查字符串是否相等</h1><ul><li>equals()</li></ul><p>可以使用equals方法检测两个字符串是否相等。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">        <span class="comment">//检查两个字符串内容是否相等</span></span><br><span class="line">        System.out.println(str.equals(str2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure><ul><li>equalsIgnoreCase()</li></ul><p>不区分大小写，检测两个字符串是否相等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="comment">//检查两个字符串内容是否相等</span></span><br><span class="line">        System.out.println(str.equalsIgnoreCase(str2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure><ul><li>&#x3D;&#x3D;</li></ul><p>“&#x3D;&#x3D;” 检查两个字符串是否属于同一个地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">        System.out.println(str == str2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">false</span><br></pre></td></tr></table></figure><p>因为两个字符串对象的地址不一样，所以为false</p><ul><li><p>compareTo()</p><ol><li>对于数值比较</li></ol><ul><li>如果指定的数与参数相等返回 0。</li><li>如果指定的数小于参数返回 -1。</li><li>如果指定的数大于参数返回 1。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span> ;</span><br><span class="line">        System.out.println(b.compareTo(<span class="number">4</span>));</span><br><span class="line">        System.out.println(b.compareTo(<span class="number">3</span>));</span><br><span class="line">        System.out.println(b.compareTo(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><ol start="2"><li>对于字符串</li></ol><ul><li>字符串与对象进行比较。</li><li>按字典顺序比较两个字符串。</li><li>如果参数字符串等于此字符串，则返回值 0；</li><li>如果此字符串小于字符串参数，则返回一个小于 0 的值；</li><li>如果此字符串大于字符串参数，则返回一个大于 0 的值。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运算符</title>
      <link href="/post/f29265a7.html"/>
      <url>/post/f29265a7.html</url>
      
        <content type="html"><![CDATA[<h1 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h1><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加法 - 相加运算符两侧的值</td><td align="left">A + B等于30</td></tr><tr><td align="left">-</td><td align="left">减法 - 左操作数减去右操作数</td><td align="left">A – B等于-10</td></tr><tr><td align="left">*</td><td align="left">乘法 - 相乘运算符两侧的值</td><td align="left">A * B等于200</td></tr><tr><td align="left">&#x2F;</td><td align="left">除法 - 左操作数除以右操作数</td><td align="left">B &#x2F; A等于2</td></tr><tr><td align="left">％</td><td align="left">取模 - 左操作数除以右操作数的余数</td><td align="left">B%A等于0</td></tr><tr><td align="left">++</td><td align="left">自增 - 操作数的值增加1</td><td align="left">B++ 或 ++B 等于 21</td></tr><tr><td align="left">–</td><td align="left">自减 - 操作数的值减少1</td><td align="left">B– 或 –B 等于 19</td></tr></tbody></table><ul><li>++b 与 b++</li></ul><ol><li>++b</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//b先自身加1，再做运算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">1</span> + ++b;</span><br><span class="line">        System.out.println(<span class="string">&quot;c = &quot;</span> + c);</span><br><span class="line">        System.out.println(<span class="string">&quot;b = &quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = 2</span><br><span class="line">b = 1</span><br></pre></td></tr></table></figure><ol start="2"><li>b++</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//b先运算，再自身加1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">1</span> + b++;</span><br><span class="line">        System.out.println(<span class="string">&quot;c = &quot;</span> + c);</span><br><span class="line">        System.out.println(<span class="string">&quot;b = &quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = 1</span><br><span class="line">b = 1</span><br></pre></td></tr></table></figure><ol start="3"><li>结果：都是自增，++b是先自增再运算，b++则是先运算再自增</li></ol><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">&#x3D;&#x3D;</td><td align="left">检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td align="left">（A &#x3D;&#x3D; B）为假(非真)。</td></tr><tr><td align="left">!&#x3D;</td><td align="left">检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td align="left">(A !&#x3D; B) 为真。</td></tr><tr><td align="left">&gt;</td><td align="left">检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td align="left">（A&gt; B）非真。</td></tr><tr><td align="left">&lt;</td><td align="left">检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td align="left">（A &lt;B）为真。</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td align="left">（A&gt; &#x3D; B）为假。</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td align="left">（A &lt;&#x3D; B）为真。</td></tr></tbody></table><h1 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h1><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">＆</td><td align="left">按位与运算符，当且仅当两个操作数的某一位都非0时候结果的该位才为1。</td><td align="left">（A＆B），得到12，即0000 1100</td></tr><tr><td align="left">|</td><td align="left">按位或运算符，只要两个操作数的某一位有一个非0时候结果的该位就为1。</td><td align="left">（A | B）得到61，即 0011 1101</td></tr><tr><td align="left">^</td><td align="left">按位异或运算符，两个操作数的某一位不相同时候结果的该位就为1。</td><td align="left">（A ^ B）得到49，即 0011 0001</td></tr><tr><td align="left">〜</td><td align="left">按位补运算符翻转操作数的每一位。</td><td align="left">（〜A）得到-61，即1100 0011</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">按位左移运算符。左操作数按位左移右操作数指定的位数。</td><td align="left">A &lt;&lt; 2得到240，即 1111 0000</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">按位右移运算符。左操作数按位右移右操作数指定的位数。</td><td align="left">A &gt;&gt; 2得到15即 1111</td></tr><tr><td align="left">&gt;&gt;&gt;</td><td align="left">按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td><td align="left">A&gt;&gt;&gt;2得到15即0000 1111</td></tr></tbody></table><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><p>A为真，B为假</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">称为逻辑”与”运算符。当且仅当两个操作数都为真，条件才为真。</td><td align="left">（A &amp;&amp; B）为假。</td></tr><tr><td align="left">| |</td><td align="left">称为逻辑”或”运算符。如果任何两个操作数任何一个为真，条件为真。</td><td align="left">（A | | B）为真。</td></tr><tr><td align="left">！</td><td align="left">称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。</td><td align="left">！（A &amp;&amp; B）为真。</td></tr><tr><td align="left">&amp;</td><td align="left">按位”与”运算符。当且仅当两个操作数都为真，条件才为真。</td><td align="left">（A &amp; B）为假。</td></tr><tr><td align="left">|</td><td align="left">按位”或”运算符。如果任何两个操作数任何一个为真，条件为真。</td><td align="left">(A | B)为真</td></tr><tr><td align="left">^</td><td align="left">按位”异或或”运算符。如果任何两个操作数，两个数不相同时，条件为真。</td><td align="left">(A ^ B)为真</td></tr></tbody></table><ul><li><p>“ &amp;&amp; “ 与 “ &amp; “  的区别</p><p>“ &amp;&amp; “ 又称短路与，A &amp;&amp; B，如果A为假时，不用判断B是否为真，皆为假，</p><p>及当A为假，不再执行B</p><p>&amp;&amp;:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> &amp;&amp; a++ != <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果a = 0,则没有执行a++ != 0</span></span><br><span class="line">        <span class="comment">//如果a = 1,则有执行a++ != 0</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>&amp;:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> &amp; a++ != <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果a = 0,则没有执行a++ != 0</span></span><br><span class="line">        <span class="comment">//如果a = 1,则有执行a++ != 0</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></li><li><p>“||” 与”|”与上述差不多</p></li></ul><h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算符，将右操作数的值赋给左侧操作数</td><td align="left">C &#x3D; A + B将把A + B得到的值赋给C</td></tr><tr><td align="left">+ &#x3D;</td><td align="left">加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td><td align="left">C + &#x3D; A等价于C &#x3D; C + A</td></tr><tr><td align="left">- &#x3D;</td><td align="left">减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数</td><td align="left">C - &#x3D; A等价于C &#x3D; C -  A</td></tr><tr><td align="left">* &#x3D;</td><td align="left">乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数</td><td align="left">C * &#x3D; A等价于C &#x3D; C * A</td></tr><tr><td align="left">&#x2F; &#x3D;</td><td align="left">除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数</td><td align="left">C &#x2F; &#x3D; A等价于C &#x3D; C &#x2F; A</td></tr><tr><td align="left">（％）&#x3D;</td><td align="left">取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数</td><td align="left">C％&#x3D; A等价于C &#x3D; C％A</td></tr><tr><td align="left">&lt;&lt; &#x3D;</td><td align="left">左移位赋值运算符</td><td align="left">C &lt;&lt; &#x3D; 2等价于C &#x3D; C &lt;&lt; 2</td></tr><tr><td align="left">&gt;&gt; &#x3D;</td><td align="left">右移位赋值运算符</td><td align="left">C &gt;&gt; &#x3D; 2等价于C &#x3D; C &gt;&gt; 2</td></tr><tr><td align="left">＆&#x3D;</td><td align="left">按位与赋值运算符</td><td align="left">C＆&#x3D; 2等价于C &#x3D; C＆2</td></tr><tr><td align="left">^ &#x3D;</td><td align="left">按位异或赋值操作符</td><td align="left">C ^ &#x3D; 2等价于C &#x3D; C ^ 2</td></tr><tr><td align="left">| &#x3D;</td><td align="left">按位或赋值操作符</td><td align="left">C | &#x3D; 2等价于C &#x3D; C | 2</td></tr></tbody></table><h1 id="三目运算"><a href="#三目运算" class="headerlink" title="三目运算"></a>三目运算</h1><p>（?:）</p><p>判断a与b是否相等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="comment">//(逻辑判断)? 判断为真的结果 : 判断为假的结果</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">c</span> <span class="operator">=</span> (a == b) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">false</span><br></pre></td></tr></table></figure><h1 id="instanceof-运算符"><a href="#instanceof-运算符" class="headerlink" title="instanceof 运算符"></a>instanceof 运算符</h1><p>该运算符用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象 instanceof 类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Cat</span> <span class="variable">cat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">        <span class="comment">//判断cat对象是否是Cat类或子类或接口</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> cat <span class="keyword">instanceof</span> Cat;</span><br><span class="line">        System.out.println(b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure><h1 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h1><table><thead><tr><th align="left">类别</th><th align="left">操作符</th><th align="left">关联性</th></tr></thead><tbody><tr><td align="left">后缀</td><td align="left">() [] . (点操作符)</td><td align="left">左到右</td></tr><tr><td align="left">一元</td><td align="left">+ + - ！〜</td><td align="left">从右到左</td></tr><tr><td align="left">乘性</td><td align="left">* &#x2F;％</td><td align="left">左到右</td></tr><tr><td align="left">加性</td><td align="left">+ -</td><td align="left">左到右</td></tr><tr><td align="left">移位</td><td align="left">&gt;&gt; &gt;&gt;&gt;  &lt;&lt;</td><td align="left">左到右</td></tr><tr><td align="left">关系</td><td align="left">&gt;&gt; &#x3D; &lt;&lt; &#x3D;</td><td align="left">左到右</td></tr><tr><td align="left">相等</td><td align="left">&#x3D;&#x3D;  !&#x3D;</td><td align="left">左到右</td></tr><tr><td align="left">按位与</td><td align="left">＆</td><td align="left">左到右</td></tr><tr><td align="left">按位异或</td><td align="left">^</td><td align="left">左到右</td></tr><tr><td align="left">按位或</td><td align="left">|</td><td align="left">左到右</td></tr><tr><td align="left">逻辑与</td><td align="left">&amp;&amp;</td><td align="left">左到右</td></tr><tr><td align="left">逻辑或</td><td align="left">| |</td><td align="left">左到右</td></tr><tr><td align="left">条件</td><td align="left">？：</td><td align="left">从右到左</td></tr><tr><td align="left">赋值</td><td align="left">&#x3D; + &#x3D; - &#x3D; * &#x3D; &#x2F; &#x3D;％&#x3D; &gt;&gt; &#x3D; &lt;&lt; &#x3D;＆&#x3D; ^ &#x3D; | &#x3D;</td><td align="left">从右到左</td></tr><tr><td align="left">逗号</td><td align="left">，</td><td align="left">左到右</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java数据类型</title>
      <link href="/post/40918c0b.html"/>
      <url>/post/40918c0b.html</url>
      
        <content type="html"><![CDATA[<h1 id="java数据类型分类"><a href="#java数据类型分类" class="headerlink" title="java数据类型分类"></a>java数据类型分类</h1><p>数据类型在编程语言中占有重要的地位。<strong>java</strong> 的数据类型分为基本数据类型和引用数据类型。</p><p>java 的数据类型如下图所示：</p><img src="/post/40918c0b/java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%88%86%E7%B1%BB.png" class=""><p><strong>基本数据类型</strong>包括：<code>boolean</code>，<code>byte</code>，<code>char</code>，<code>short</code>，<code>int</code>，<code>long</code>，<code>float</code> 和 <code>double</code>。</p><p><strong>引用数据类型</strong>：它是以一种特殊的方式指向变量的实体，这种机制类似于 <code>c++</code> 的指针。这类变量在声明的时候不会分配内存，必须要另外的开辟内存空间。</p><h1 id="java基本数据类型"><a href="#java基本数据类型" class="headerlink" title="java基本数据类型"></a>java基本数据类型</h1><table><thead><tr><th>关键字</th><th>类型</th><th>位数 (8位一字节)</th><th>取值范围(表示范围)</th></tr></thead><tbody><tr><td>byte</td><td>整型</td><td>8 bit&#x2F;1字节</td><td>-2^7 ~ 2^7-1</td></tr><tr><td>short</td><td>整型</td><td>16 bit&#x2F;2字节</td><td>-2^15 ~ 2^15-1</td></tr><tr><td>int</td><td>整型</td><td>32 bit&#x2F;4字节</td><td>-2^31 ~ 2^31-1</td></tr><tr><td>long</td><td>整型</td><td>64 bit&#x2F;8字节</td><td>-2^63 ~ 2^63-1</td></tr><tr><td>float</td><td>浮点型</td><td>32 bit&#x2F;4字节</td><td>3.402823e+38 ~ 1.401298e-45</td></tr><tr><td>double</td><td>浮点型</td><td>64 bit&#x2F;8字节</td><td>1.797693e+308~ 4.9000000e-324</td></tr><tr><td>char</td><td>字符型</td><td>16 bit&#x2F;2字节</td><td>0 ~ 2^16-1</td></tr><tr><td>boolean</td><td>布尔型</td><td>32&#x2F;8</td><td>true&#x2F;false</td></tr></tbody></table><p><code>整型 </code>：</p><p>整型用于表示没有小数部分的数值，它允许是负数。Java提供了4种整型，<code>byte</code>，<code>short</code>，<code>int</code>，<code>long</code></p><p>长整型数值有一个后缀L或l</p><p>从Java 7开始，可以为数字字面量加下划线，</p><p>如用1_000_00（0或0b1111_0100_0010_0100_0000）表示一百万。</p><Br><p><code>浮点型 </code>：</p><p>​double表示这种类型的数值精度是float类型的两倍（有人称之为双精度数值）。</p><p>​float类型的数值有一个后缀F或f（例如，3.14F）。</p><p>​所有的浮点数值计算都遵循<a href="https://zhuanlan.zhihu.com/p/343033661">IEEE 754规范</a>。具体来说，下面是用于表示溢出和出错情况的三个特殊的浮点数值：</p><ul><li><p>正无穷大</p></li><li><p>负无穷大</p></li><li><p>NaN（不是一个数字）</p><p>例如，一个正整数除以0的结果为正无穷大。计算0&#x2F;0或者负数的平方根结果为NaN。</p><Br><p>Double.isNaN(x)检查是否为非数值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestNaN</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0.0</span>/<span class="number">0</span>;</span><br><span class="line">        System.out.println(x);</span><br><span class="line">        System.out.println(Double.isNaN(x));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NaN</span><br><span class="line">true</span><br></pre></td></tr></table></figure><Br></li></ul><p><code>字符型 </code>:</p><p>char类型原本用于表示单个字符。不过，现在情况已经有所变化。如今，有些<a href="https://www.cnblogs.com/csguo/p/7401874.html">Unicode</a>字符可以用一个char值描述，另外一些Unicode字符则需要两个char值。</p><p>在Java中，char类型描述了UTF-16编码中的一个代码单元。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="comment">//char类型的值可以表示为十六进制值，其范围从\u0000到\Uffff。</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">x</span> <span class="operator">=</span> <span class="string">&#x27;\u09A0&#x27;</span>;</span><br><span class="line">        <span class="comment">//char类型运算结果为int，需要强制转换成char类型</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">char</span>) (a + <span class="number">98</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(x);</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">ঠ</span><br><span class="line">™</span><br><span class="line">Ã</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/csguo/p/7401874.html">Unicode编码表</a></p><Br><p><code>布尔型 </code>：布尔数据类型只有两个可能的值：真和假。使用此数据类型为跟踪真&#x2F;假条件的简单标记。这种数据类型就表示这一点信息，<strong>但是它的“大小”并不是精确定义</strong></p><p>在符合JVM规范的虚拟机中</p><ul><li><strong>如果boolean是单独使用：boolean占4个字节。</strong></li><li><strong>如果boolean是以“boolean数组”的形式使用：boolean占1个字节。</strong></li></ul><Br><p><code>默认类型 </code>：</p><p>​在没有后标的情况下，浮点型默认为double</p><p>例如：</p><ul><li>(3.14f) 为float型</li><li>(3.14)      默认为double型</li></ul><p>​在没有强制转换的情况下，有变量运算的，整数运算结果为int 型，浮点数运算结果为double型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">y</span> <span class="operator">=</span> x + <span class="number">1</span>; <span class="comment">//报错,因为x + 1后为int型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li><a href="https://www.cnblogs.com/Yuakk/p/14349555.html">变量命名规范</a></li><li>变量声明和初始化</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//声明变量a</span></span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="comment">//变量a初始化</span></span><br><span class="line">         a = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//连续声明变量b,c变量</span></span><br><span class="line">        <span class="type">int</span> b,c;</span><br><span class="line">        <span class="comment">//b，c初始化</span></span><br><span class="line">        b = c = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//d变量声明及初始化</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        System.out.println(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p><a href="http://www.51gjie.com/java/110.html">常量命名</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义常量PI,常量名要大写</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.1415926535</span>;</span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.1415926535</span><br></pre></td></tr></table></figure><h1 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h1><ol><li>自动类型转换</li></ol><ul><li>数值型数据的转换：byte→short→int→long→float→double。</li><li>字符型转换为整型：char→int。</li></ul><p>基本类型自动转换图。</p><img src="/post/40918c0b/%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2.png" class=""><p><img src="/java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2.png" alt="自动转换"></p><p>虚线为可能有精度损失的转换。</p><ol start="2"><li>强制类型转换</li></ol><ul><li><p>强制类型转换通过截断小数部分将浮点值转换为整型。</p></li><li><p>如果试图将一个数值从一种类型强制转换为另一种类型，而又超出了目标类型的表示范围，结果就会截断成一个完全不同的值。例如，（byte）300的实际值为44。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>) a;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">44</span><br></pre></td></tr></table></figure><ul><li>boolean不参与转换</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>样式收集</title>
      <link href="/post/225321da.html"/>
      <url>/post/225321da.html</url>
      
        <content type="html"><![CDATA[<div class="btns rounded grid5">            <a class="button" href='https://wwd.lanzoul.com/iUk2o04i0n7i' title='下载源码'><i class='fas fa-download'></i>下载源码</a>          </div><mark class="hl-label red">xmind</mark> <blockquote class="pullquote [class]"><p><a href="https://github.com/bigFunny/resource/blob/main/java%E5%90%8E%E7%AB%AF.xmind">java学习路线</a></p></blockquote><div class="tag link"><a class="link-card" title="font-awesome v6" href="https://fontawesome.com/icons?from=io"><div class="left"><img src="https://w.wallhaven.cc/full/g7/wallhaven-g7kk1d.jpg"/></div><div class="right"><p class="text">font-awesome v6</p><p class="url">https://fontawesome.com/icons?from=io</p></div></a></div> <div class="tabs" id="大佬"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#大佬-1">大佬 1</button></li><li class="tab"><button type="button" data-href="#大佬-2">大佬 2</button></li><li class="tab"><button type="button" data-href="#大佬-3">大佬 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="大佬-1"><div class="tag link"><a class="link-card" title="大佬一" href="https://butterfly.js.org/"><div class="left"><img src="https://w.wallhaven.cc/full/j3/wallhaven-j3m8y5.png"/></div><div class="right"><p class="text">大佬一</p><p class="url">https://butterfly.js.org/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="大佬-2"><div class="tag link"><a class="link-card" title="大佬二" href="https://tzy1997.com/"><div class="left"><img src="https://w.wallhaven.cc/full/rd/wallhaven-rdwjj7.jpg"/></div><div class="right"><p class="text">大佬二</p><p class="url">https://tzy1997.com/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="大佬-3"><div class="tag link"><a class="link-card" title="大佬二" href="https://akilar.top/"><div class="left"><img src="https://w.wallhaven.cc/full/6o/wallhaven-6oejgq.jpg"/></div><div class="right"><p class="text">大佬二</p><p class="url">https://akilar.top/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客创建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK基本介绍</title>
      <link href="/post/227cc651.html"/>
      <url>/post/227cc651.html</url>
      
        <content type="html"><![CDATA[<h1 id="JDK-基本介绍"><a href="#JDK-基本介绍" class="headerlink" title="JDK 基本介绍"></a>JDK 基本介绍</h1><ol><li>JDK 的全称(Java Development Kit Java 开发工具包)</li></ol><blockquote class="pullquote [class]"><p>JDK &#x3D; JRE + java 的开发工具 [java, javac,javadoc,javap 等] </p></blockquote><ol start="2"><li>JDK 是提供给 Java 开发人员使用的，其中包含了 java 的开发工具，也包括了 JRE。所以安装了 JDK，就不用在单独安装 JRE 了。</li></ol><h1 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h1><ol><li>JRE(Java Runtime Environment Java 运行环境)</li></ol><blockquote class="pullquote [class]"><p>JRE &#x3D; JVM + Java 的核心类库[类] </p></blockquote><ol start="2"><li>包括 Java 虚拟机(JVM Java Virtual Machine)和 Java 程序所需的核心类库等，如果想要运行一个开发好的 Java 程序，计算机中只需要安装 JRE 即可。</li></ol><h1 id="JDK、JRE-和-JVM-的包含关系"><a href="#JDK、JRE-和-JVM-的包含关系" class="headerlink" title="JDK、JRE 和 JVM 的包含关系"></a>JDK、JRE 和 JVM 的包含关系</h1><ol><li><p><strong>JDK &#x3D; JRE +</strong> <strong>开发工具集</strong>（例如 Javac,java 编译工具等) </p></li><li><p><strong>JRE &#x3D; JVM + Java SE</strong> <strong>标准类库</strong>（java 核心类库） </p></li><li><p>如果只想运行开发好的 .class 文件只需要 JRE</p></li></ol><h1 id="JDK-8下载及安装"><a href="#JDK-8下载及安装" class="headerlink" title="JDK 8下载及安装"></a>JDK 8下载及安装</h1><div class="tag link"><a class="link-card" title="别人家教程永远是最好的" href="https://blog.csdn.net/weixin_44887352/article/details/106588830"><div class="left"><img src="https://w.wallhaven.cc/full/g7/wallhaven-g7kk1d.jpg"/></div><div class="right"><p class="text">别人家教程永远是最好的</p><p class="url">https://blog.csdn.net/weixin_44887352/article/details/106588830</p></div></a></div> ]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/post/518e617c.html"/>
      <url>/post/518e617c.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="常用liux命令"><a href="#常用liux命令" class="headerlink" title="常用liux命令"></a>常用liux命令</h2><p>cd：改变目录</p><p>cd..：回退到上一个目录，直接cd进入默认目录</p><p>pwd：显示当前目录路径</p><p>ls(ll)：列出当前目录中所有文件</p><p>touch：新建一个文件，如touch index.js</p><p>rm：删除一个文件用法与touch差不多</p><p>mkdir：新建一个目录</p><p>rm -f：删除一个文件夹</p><p>mv：移动文件，例：mv index.html src，将index文件移到src</p><p>reset：重新初始化</p><p>clear：清屏</p><p>history：查看历史</p><p>help：帮助</p><p>exit：退出</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>查看配置：git config -l</p><p>查看不同级别的配置文件：</p><ul><li><p>查看系统配置</p><p>git config –system –list</p></li><li><p>查看当前用户</p><p>git config –global –list</p></li></ul><p>用户名字与邮箱配置：</p><ul><li>git config –global user.name “sda”</li><li>git config –global user.email “<a href="mailto:&#115;&#100;&#x61;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#109;">&#115;&#100;&#x61;&#x40;&#x71;&#113;&#x2e;&#x63;&#111;&#109;</a>“</li></ul><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><img src="/post/518e617c/1662041323233.png" class=""><h2 id="Git使用"><a href="#Git使用" class="headerlink" title="Git使用"></a>Git使用</h2><h3 id="项目创建及克隆"><a href="#项目创建及克隆" class="headerlink" title="项目创建及克隆"></a>项目创建及克隆</h3><p>初始化项目（将项目变成git管理的项目）：git init</p><p>克隆远程仓库：git clone [url]</p><p>ps:url 的复制地点</p><h3 id="git基"><a href="#git基" class="headerlink" title="git基"></a>git基</h3><p>查看文件状态：git status [filename] </p><p>查看所有文件状态：git status</p><p>生成公钥：ssh-keygen -t rsa</p><p>1.创建一个文件，用git init将该文件git化</p><p>2.选择克隆或者新创</p><p>3.git add.                                           将所有文件存到暂存区</p><p>4.git commit -m  “消息内容”        提交暂存区内容到本地仓库 </p><h3 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h3><img src="/post/518e617c/1662045623748.png" class=""><h3 id="远程仓库的使用"><a href="#远程仓库的使用" class="headerlink" title="远程仓库的使用"></a>远程仓库的使用</h3><p>1.注册</p><p>2.设置公钥</p><p>​生成公钥：ssh-keygen -t rsa</p><p>​ssh-keygen -t rsa -C “邮箱地址”</p><p>​    测试公钥是否绑定成功：ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#x6f;&#x6d;</a></p><img src="/post/518e617c/%E5%85%AC%E9%92%A5.png" class=""><img src="/post/518e617c/%E5%85%AC%E9%92%A52.png" class=""><img src="/post/518e617c/%E5%85%AC%E9%92%A53.png" class=""><img src="/post/518e617c/%E5%85%AC%E9%92%A54.png" class=""><p>3.将公钥添加到码云或github中</p><p>4.创建仓库（已经注册了为以下步骤）</p><img src="/post/518e617c/%E4%BB%93%E5%BA%93.png" class=""><p>5.克隆连接本地</p><p>​创建一个文件</p><p>​然后打开git输入：</p><img src="/post/518e617c/git.png" class=""><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化项目（将项目变成git管理的项目）：</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment">#克隆远程仓库（克隆远程仓库）：</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><p>6.复制要添加的文件到克隆的文件</p><img src="/post/518e617c/Snipaste_2022-09-05_23-03-05.png" class=""><p>7.**git add .**将文件提供到暂存区</p><img src="/post/518e617c/idea%E4%B8%ADgit%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8F%B0.png" class=""><p>8.git commit 提交到本地仓库</p><img src="/post/518e617c/Snipaste_2022-09-05_23-05-21.png" class=""><p>便于commit</p><p>9.git push 提交到远程仓库</p><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="comment"># 新建一个分支但仍然停留在当前分支</span></span><br><span class="line">git branch dev</span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b dev</span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">git merge dev</span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">git brand -d dev</span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin --delete dev</span><br><span class="line">git branch -dr dev</span><br><span class="line"><span class="comment"># 推送分支到远程仓库</span></span><br><span class="line">git push origin dev</span><br><span class="line"><span class="comment"># 查看提交记录</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 查看本地仓库</span></span><br><span class="line">git ls-files</span><br><span class="line"><span class="comment"># 查看本地仓库[dir下]</span></span><br><span class="line">git ls-files <span class="built_in">dir</span>/</span><br><span class="line"><span class="comment"># 删除暂缓区内容</span></span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;file&gt;</span><br><span class="line"><span class="comment"># 删除暂缓区文件夹下所有文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached <span class="built_in">dir</span>/</span><br><span class="line"><span class="comment"># 删除本地分支</span></span><br><span class="line">git branch -d localBranchName</span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin --delete remoteBranchName</span><br></pre></td></tr></table></figure><h2 id="一般创建远程项目步骤"><a href="#一般创建远程项目步骤" class="headerlink" title="一般创建远程项目步骤"></a>一般创建远程项目步骤</h2><div class="tabs" id="步骤"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#步骤-1">步骤 1</button></li><li class="tab"><button type="button" data-href="#步骤-2">步骤 2</button></li><li class="tab"><button type="button" data-href="#步骤-3">步骤 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="步骤-1"><blockquote class="pullquote [class]"><p>在githud或者gitee创建仓库</p></blockquote><p>xxxx为你githud或者gitee的名，如<a href="https://github.com/bigFunny">https://github.com/bigFunny</a></p><p>你的github主页:<a href="https://github.com/xxxxx">https://github.com/xxxxx</a></p><p>你的gitee主页:<a href="https://gitee.com/xxxxx">https://gitee.com/xxxxx</a></p><blockquote class="pullquote [class]"><p>点击repositories</p></blockquote><blockquote class="pullquote [class]"><p>点击new</p></blockquote><img src="/post/518e617c/%E4%BB%93%E5%BA%932.png" class=""><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="步骤-2"><blockquote class="pullquote [class]"><p>复制远程仓库路径</p></blockquote><img src="/post/518e617c/%E5%A4%8D%E5%88%B6%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E8%B7%AF%E5%BE%84.png" class=""><blockquote class="pullquote [class]"><p>克隆远程仓库</p></blockquote><p>在你喜欢的文件下git bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 远程仓库路径</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="步骤-3"><blockquote class="pullquote [class]"><p>将你的项目复制到带有.git的文件夹下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;骚话&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><blockquote class="pullquote [class]"><p>如果是push到分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java-learning</title>
      <link href="/post/7904333c.html"/>
      <url>/post/7904333c.html</url>
      
        <content type="html"><![CDATA[<h1 id="java学习路线"><a href="#java学习路线" class="headerlink" title="java学习路线"></a>java学习路线</h1><img src="/post/7904333c/java.png" class=""><mark class="hl-label red">xmind</mark> 文件下载 <blockquote class="pullquote [class]"><p><a href="https://github.com/bigFunny/resource/blob/main/java%E5%90%8E%E7%AB%AF.xmind">java学习路线</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm</title>
      <link href="/post/f76efcad.html"/>
      <url>/post/f76efcad.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><div class="btns rounded grid5">            <a class="button" href='https://wwd.lanzoul.com/iUk2o04i0n7i' title='下载源码'><i class='fas fa-download'></i>下载源码</a>          </div><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nvm off                  // 禁用 Node.js 版本管理(不卸载任何东西)</span><br><span class="line">nvm on                   // 启用 Node.js 版本管理</span><br><span class="line">nvm v || nvm version     // 查看 nvm 版本 </span><br><span class="line">nvm use <span class="language-xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span></span>        // 切换使用指定的版本 node</span><br><span class="line">nvm ls                   // 列出所有安装的版本</span><br><span class="line">nvm list available       // 显示可以安装的所有 Node.js 的版本</span><br><span class="line">nvm ls-remote            // 列出所以远程服务器的版本（官方 node version list）</span><br><span class="line">nvm current              // 显示当前的版本</span><br><span class="line">nvm alias                // 给不同的版本号添加别名</span><br><span class="line">nvm unalias              // 删除已定义的别名</span><br><span class="line">nvm reinstall-packages   // 在当前版本node环境下，重新全局安装指定版本号的npm包</span><br><span class="line">nvm uninstall <span class="language-xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span></span>  // 删除已安装的指定版本，语法与 install 类似</span><br><span class="line">nvm install <span class="language-xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span></span>    // 安装指定版本，可模糊安装，如：安装v6.2.0，既可nvm install v6.2.0，又可nvm install 6.2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>butterfly</title>
      <link href="/post/18195.html"/>
      <url>/post/18195.html</url>
      
        <content type="html"><![CDATA[<h1 id="butterfly主题配置"><a href="#butterfly主题配置" class="headerlink" title="butterfly主题配置"></a>butterfly主题配置</h1><p>Butterfly支持 <div class="tag link"><a class="link-card" title="font-awesome v6" href="https://fontawesome.com/icons?from=io"><div class="left"><img src="https://w.wallhaven.cc/full/g7/wallhaven-g7kk1d.jpg"/></div><div class="right"><p class="text">font-awesome v6</p><p class="url">https://fontawesome.com/icons?from=io</p></div></a></div> 图标</p><p>更新番剧信息：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E8%AA%9E%E8%A8%80">https://butterfly.js.org/posts/4aa8abbe/#%E8%AA%9E%E8%A8%80</a></p></div></div><h2 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a>网站资料</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E7%B6%B2%E7%AB%99%E8%B3%87%E6%96%99">https://butterfly.js.org/posts/4aa8abbe/#%E7%B6%B2%E7%AB%99%E8%B3%87%E6%96%99</a></p></div></div><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E5%B0%8E%E8%88%AA%E8%8F%9C%E5%96%AE">https://butterfly.js.org/posts/4aa8abbe/#%E5%B0%8E%E8%88%AA%E8%8F%9C%E5%96%AE</a></p></div></div><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC">https://butterfly.js.org/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC</a></p></div></div><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E7%A4%BE%E4%BA%A4%E5%9C%96%E6%A8%99">https://butterfly.js.org/posts/4aa8abbe/#%E7%A4%BE%E4%BA%A4%E5%9C%96%E6%A8%99</a></p></div></div><h2 id="顶部配图"><a href="#顶部配图" class="headerlink" title="顶部配图"></a>顶部配图</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96">https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96</a></p></div></div><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96">https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96</a></p></div></div><h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2">https://butterfly.js.org/posts/4aa8abbe/#%E6%96%87%E7%AB%A0%E5%B0%81%E9%9D%A2</a></p></div></div><h2 id="文章相关配置"><a href="#文章相关配置" class="headerlink" title="文章相关配置"></a>文章相关配置</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%96%87%E7%AB%A0meta%E9%A1%AF%E7%A4%BA">https://butterfly.js.org/posts/4aa8abbe/#%E6%96%87%E7%AB%A0meta%E9%A1%AF%E7%A4%BA</a></p></div></div><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%AD%E5%83%8F">https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%AD%E5%83%8F</a></p></div></div><h2 id="图片描述"><a href="#图片描述" class="headerlink" title="图片描述"></a>图片描述</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E5%9C%96%E7%89%87%E6%8F%8F%E8%BF%B0">https://butterfly.js.org/posts/4aa8abbe/#%E5%9C%96%E7%89%87%E6%8F%8F%E8%BF%B0</a></p></div></div><h2 id="复制相关"><a href="#复制相关" class="headerlink" title="复制相关"></a>复制相关</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E8%A4%87%E8%A3%BD%E7%9B%B8%E9%97%9C%E9%85%8D%E7%BD%AE">https://butterfly.js.org/posts/4aa8abbe/#%E8%A4%87%E8%A3%BD%E7%9B%B8%E9%97%9C%E9%85%8D%E7%BD%AE</a></p></div></div><h2 id="页脚"><a href="#页脚" class="headerlink" title="页脚"></a>页脚</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E5%8D%9A%E5%AE%A2%E5%B9%B4%E4%BB%BD">https://butterfly.js.org/posts/4aa8abbe/#%E5%8D%9A%E5%AE%A2%E5%B9%B4%E4%BB%BD</a></p></div></div><h2 id="右下角按钮"><a href="#右下角按钮" class="headerlink" title="右下角按钮"></a>右下角按钮</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E7%B0%A1%E7%B9%81%E8%BD%89%E6%8F%9B">https://butterfly.js.org/posts/4aa8abbe/#%E7%B0%A1%E7%B9%81%E8%BD%89%E6%8F%9B</a></p></div></div><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E5%81%B4%E9%82%8A%E6%8E%92%E7%89%88">https://butterfly.js.org/posts/4aa8abbe/#%E5%81%B4%E9%82%8A%E6%8E%92%E7%89%88</a></p></div></div><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><div class="hide-block"><button type="button" class="hide-button" style="">参考文档    </button><div class="hide-content"><p>参考文档：<a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89</a></p></div></div><h2 id="写博客的常用标签"><a href="#写博客的常用标签" class="headerlink" title="写博客的常用标签"></a>写博客的常用标签</h2><div class="site-card-group"><a class="site-card" href="https://tzy1997.com/articles/0xiipgum"><div class="img"><img src="https://w.wallhaven.cc/full/y8/wallhaven-y8622k.jpg"/></div><div class="info"><img src="https://w.wallhaven.cc/full/o3/wallhaven-o3km89.png"/><span class="title">常用标签</span><span class="desc"> 写博客可能用到的标签外挂</span></div></a></div><h2 id="参考大佬的博客："><a href="#参考大佬的博客：" class="headerlink" title="参考大佬的博客："></a>参考大佬的博客：</h2><div class="tabs" id="大佬"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#大佬-1">大佬 1</button></li><li class="tab"><button type="button" data-href="#大佬-2">大佬 2</button></li><li class="tab"><button type="button" data-href="#大佬-3">大佬 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="大佬-1"><div class="tag link"><a class="link-card" title="大佬一" href="https://butterfly.js.org/"><div class="left"><img src="https://w.wallhaven.cc/full/j3/wallhaven-j3m8y5.png"/></div><div class="right"><p class="text">大佬一</p><p class="url">https://butterfly.js.org/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="大佬-2"><div class="tag link"><a class="link-card" title="大佬二" href="https://tzy1997.com/"><div class="left"><img src="https://w.wallhaven.cc/full/rd/wallhaven-rdwjj7.jpg"/></div><div class="right"><p class="text">大佬二</p><p class="url">https://tzy1997.com/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="大佬-3"><div class="tag link"><a class="link-card" title="大佬二" href="https://akilar.top/"><div class="left"><img src="https://w.wallhaven.cc/full/6o/wallhaven-6oejgq.jpg"/></div><div class="right"><p class="text">大佬二</p><p class="url">https://akilar.top/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客创建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo</title>
      <link href="/post/21358.html"/>
      <url>/post/21358.html</url>
      
        <content type="html"><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><p>视频:<a href="https://www.youtube.com/watch?v=AIqBubK6ZLc">https://www.youtube.com/watch?v=AIqBubK6ZLc</a></p><ul><li>添加文案</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文件名</span><br></pre></td></tr></table></figure><ul><li>添加草稿b</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft b</span><br></pre></td></tr></table></figure><ul><li>公开草稿b</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish b</span><br></pre></td></tr></table></figure><ul><li>创建新目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 目录名</span><br></pre></td></tr></table></figure><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p>视频：<a href="https://www.youtube.com/watch?v=pfD6FCZdW4Q">https://www.youtube.com/watch?v=pfD6FCZdW4Q</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">title: 页面标题</span><br><span class="line"></span><br><span class="line">date: 页面创建日期</span><br><span class="line"></span><br><span class="line">tags: 标签</span><br><span class="line"></span><br><span class="line">type: 标签、分类和友情链接三个页面需要配置</span><br><span class="line"></span><br><span class="line">categories:分类</span><br><span class="line"></span><br><span class="line">updated: 页面更新日期</span><br><span class="line"></span><br><span class="line">comments: 显示页面评论模块(默认 true)</span><br><span class="line"></span><br><span class="line">description: 页面描述</span><br><span class="line"></span><br><span class="line">keywords: 页面关键字</span><br><span class="line"></span><br><span class="line">top_img: 页面顶部图片</span><br><span class="line"></span><br><span class="line">cover: 文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</span><br><span class="line"></span><br><span class="line">mathjax: 显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span><br><span class="line"></span><br><span class="line">katex: 显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span><br><span class="line"></span><br><span class="line">aside: 显示侧边栏 (默认 true)</span><br><span class="line"></span><br><span class="line">aplayer: 在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</span><br><span class="line"></span><br><span class="line">highlight_shrink: 配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span><br><span class="line"></span><br><span class="line">copyright: 显示文章版权模块(默认为设置中post_copyright的enable配置)</span><br><span class="line"></span><br><span class="line">copyright_author: 文章版权模块的文章作者</span><br><span class="line"></span><br><span class="line">copyright_author_href: 文章版权模块的文章作者链接</span><br><span class="line"></span><br><span class="line">copyright_url: 文章版权模块的文章连结链接</span><br><span class="line"></span><br><span class="line">copyright_info: 文章版权模块的版权声明文字</span><br><span class="line"></span><br><span class="line">toc: 显示文章TOC(默认为设置中toc的enable配置)</span><br><span class="line"></span><br><span class="line">toc_number: 显示toc_number(默认为设置中toc的number配置)</span><br><span class="line"></span><br><span class="line">toc_style_simple: 显示 toc 简洁模式</span><br></pre></td></tr></table></figure><h2 id="Tag-Plugins"><a href="#Tag-Plugins" class="headerlink" title="Tag Plugins"></a>Tag Plugins</h2><p>视频：<a href="https://www.youtube.com/watch?v=I07XMi7MHd4&amp;t=1s">https://www.youtube.com/watch?v=I07XMi7MHd4&amp;t=1s</a></p><p>详细文档：<a href="https://hexo.io/docs/tag-plugins">https://hexo.io/docs/tag-plugins</a></p><ul><li>Block Quote</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><p>例如：</p><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote><ul><li>Code Block</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">额外选项</th><th align="left">描述</th><th align="left">默认</th></tr></thead><tbody><tr><td align="left"><code>line_number</code></td><td align="left">显示行号</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>line_threshold</code></td><td align="left">只要代码块的行数超过这个阈值，就只显示行号。</td><td align="left"><code>0</code></td></tr><tr><td align="left"><code>highlight</code></td><td align="left">启用代码突出显示</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>first_line</code></td><td align="left">指定第一行号</td><td align="left"><code>1</code></td></tr><tr><td align="left"><code>mark</code></td><td align="left">行突出显示特定行，每个值用逗号分隔。使用破折号指定数字范围 示例：<code>mark:1,4-7,10</code>将标记第 1、4 到 7 和 10 行。</td><td align="left"></td></tr><tr><td align="left"><code>wrap</code></td><td align="left">将代码块包装在<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">&#96;&#96;</a></td><td align="left"><code>true</code></td></tr></tbody></table><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">alert(&#x27;Hello World!&#x27;); </span><br></pre></td></tr></table></figure><ul><li>Pull Quote</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure><blockquote class="pullquote [class]"><p>content</p></blockquote><ul><li>jsFiddle</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure><iframe scrolling="no" width="[width]" height="[height]" src="https://jsfiddle.net/shorttag/embedded/[tabs]/[skin]" frameborder="0" loading="lazy" allowfullscreen></iframe><ul><li>Gist</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure><script src="//gist.github.com/gist_id.js?file=[filename]"></script><ul><li>iframe</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure><iframe src="url" width="[width]" height="[height]" frameborder="0" loading="lazy" allowfullscreen></iframe><ul><li>Image</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] &#x27;&quot;title text&quot; &quot;alt text&quot;&#x27; %&#125;</span><br></pre></td></tr></table></figure><img src="/path/to/image" class="[class names]" title="[width] [height] " alt="title text"><ul><li>Link</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure><ul><li>Include Code</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] [from:line] [to:line] path/to/file %&#125;</span><br></pre></td></tr></table></figure><ul><li>YouTube</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video_id [type] [cookie] %&#125;</span><br></pre></td></tr></table></figure><div class="video-container"><iframe src="https://www.youtube.com/embed/lJIrF4YjHfQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>Vimeo</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% vimeo video_id [width] [height] %&#125;</span><br></pre></td></tr></table></figure><div class="video-container"><iframe src="https://player.vimeo.com/video/video_id,[width],[height]" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>Include Posts</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br><span class="line">&#123;% post_link filename [title] [escape] %&#125;</span><br></pre></td></tr></table></figure><ul><li>Embed image</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://wallroom.io/img/1920x1200/bg-0f3fc97.jpg&quot; title=&quot;lorem ipsum&quot; alt=&quot;dolor&quot;&gt;</span><br></pre></td></tr></table></figure><img src="https://wallroom.io/img/1920x1200/bg-0f3fc97.jpg" title="实验图" alt="dolor"><ul><li>Raw（解决错误信息）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h2 id="Asset-Folders"><a href="#Asset-Folders" class="headerlink" title="Asset Folders"></a>Asset Folders</h2><img src="/post/21358/p3.png" class=""><p>文件放的地点：</p><img src="/post/21358/p4.png" class="" title="文件放的地方">]]></content>
      
      
      <categories>
          
          <category> 博客创建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
